<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<mvc:annotation-driven>
		<!-- <mvc:message-converters register-defaults="true"> 配置fastjson支持 <bean 
			class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"> 
			<property name="defaultCharset" value="UTF-8" /> <property name="supportedMediaTypes"> 
			<list> <value>text/html;charset=UTF-8</value> <value>application/json</value> 
			</list> </property> </bean> </mvc:message-converters> -->
	</mvc:annotation-driven>
	<!-- servlet-mapping 配置静态资源默认servlet配置 1:加入对静态资源的处理: js, gif, png 2:充许使用"/"做整体映射,否则web.xml中DispatcherServlet的<url-pattern></url-pattern>只 
		能配置成*.do或*.action等 -->
	<mvc:default-servlet-handler />

	<!-- spring mvc 扫描 -->
	<context:component-scan base-package="com">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 时间类型转换 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="com.hqyj.crm.common.config.FormatDate" />
		</property>
	</bean>
	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 开启shrio注解 -->
	  <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean> 


</beans>