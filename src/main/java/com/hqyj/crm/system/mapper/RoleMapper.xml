<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqyj.crm.system.dao.RoleMapper">
	<resultMap id="BaseResultMap"
		type="com.hqyj.crm.system.entity.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR"
			property="roleName" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="create_time" jdbcType="TIMESTAMP"
			property="createTime" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_name, name, create_time
	</sql>
	<select id="selectByUserId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select m_role.role_id as role_id,m_role.role_name as
		role_name,m_role.name
		as name,m_role.create_time as create_time from
		m_user
		inner join m_user_role on m_user.user_id=m_user_role.user_id
		inner join m_role on m_role.role_id=m_user_role.role_id
		where
		m_user.user_id=#{userId}

	</select>

	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from m_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from m_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>

	<!-- 插入角色，返回插入后的id -->
	<insert id="insert"
		parameterType="com.hqyj.crm.system.entity.Role"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into m_role (role_id, role_name, name,
		create_time)
		values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>

	<insert id="insertSelective"
		parameterType="com.hqyj.crm.system.entity.Role">
		insert into m_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.hqyj.crm.system.entity.Role">
		update m_role
		<set>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.hqyj.crm.system.entity.Role">
		update m_role
		set role_name = #{roleName,jdbcType=VARCHAR},
		name = #{name,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>

	<!--++++++++++++++++++++++++++++++ -->
	<!-- 查询所有的角色 queryAllRoles -->
	<select id="queryAllRoles" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from m_role
	</select>

	<!-- 通过id数组 批量删除id角色 ，roleDeleBatch -->
	<delete id="deleRoleBatch" parameterType="java.lang.Integer">
		DELETE FROM m_role WHERE role_id IN
		<foreach collection="array" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<!--查询是否存在该角色 -->
	<select id="queryRoleByName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from m_role where name = #{name,jdbcType=VARCHAR}
	</select>

	<!-- 验证修改角色名称的数据合理性，通过name查询角色id -->
	<select id="queryRoleIdByName" parameterType="java.lang.String" resultType="java.lang.Integer">
		select role_id from m_role where name = #{name,jdbcType=VARCHAR}
	</select>

	<!-- queryRoleByRoleName,验证添加角色时，输入的角色代码是否重复 -->
	<select id="queryRoleByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from m_role where role_name = #{roleName,jdbcType=VARCHAR}
	</select>
	
	<!--queryRoleIdByRoleName,验证角色代码是否重复，通过roleName查询角色id  -->
	<select id="queryRoleIdByRoleName" parameterType="java.lang.String" resultType="java.lang.Integer">
		select role_id from m_role where role_name = #{roleName,jdbcType=VARCHAR}
	</select>
</mapper>